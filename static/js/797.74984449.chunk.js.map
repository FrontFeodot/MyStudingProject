{"version":3,"file":"static/js/797.74984449.chunk.js","mappings":"wQAaMA,EAAY,SAACC,GACjB,OAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVN,WAAYA,EACZO,QAAS,IAEXC,iBAAkBC,EAAAA,GAAW,CAC3BJ,MAAOI,EAAAA,KAAaC,SAAS,kBAC7BJ,SAAUG,EAAAA,KACPC,SAAS,kBACTC,IAAI,GAAI,8BACRC,IAAI,EAAG,+BAEZC,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClClB,EAAMmB,MACJH,EAAOT,MACPS,EAAOR,SACPQ,EAAOd,aAAc,EACrBc,EAAOP,QACPS,GAEFD,GAAc,MAGlB,OACE,+BACE,SAAC,KAAD,CACEG,UAAWC,EAAAA,EAAAA,UACXf,cAAeF,EAAOE,cACtBgB,gBAAc,EACdP,SAAUX,EAAOmB,aACjBb,iBAAkBN,EAAOM,iBAL3B,UAOE,UAAC,KAAD,YACE,iBACEU,UACEhB,EAAOoB,OAAOjB,OAASH,EAAOqB,QAAQlB,OAASc,EAAAA,EAAAA,MAFnD,WAKE,sCACA,kBAAMD,UAAWC,EAAAA,EAAAA,MAAjB,WACE,SAAC,IAAD,CACEK,GAAG,QACHC,YAAa,QACbC,KAAM,QACNC,OAAQzB,EAAO0B,WACfC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOY,OAAOT,MACrB2B,aAAa,OAEd9B,EAAOoB,OAAOjB,OAASH,EAAOqB,QAAQlB,QACrC,0BAAOH,EAAOoB,OAAOjB,eAK3B,iBACEa,UACEhB,EAAOoB,OAAOhB,UAAYJ,EAAOqB,QAAQjB,UAAYa,EAAAA,EAAAA,MAFzD,WAKE,yCACA,SAAC,IAAD,CACED,UAAWC,EAAAA,EAAAA,SACXK,GAAG,WACHC,YAAa,WACbC,KAAM,WACNC,OAAQzB,EAAO0B,WACfC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOY,OAAOR,SACrB0B,aAAa,OAEd9B,EAAOoB,OAAOhB,UAAYJ,EAAOqB,QAAQjB,WACxC,0BAAOJ,EAAOoB,OAAOhB,eAIzB,4BACE,SAAC,IAAD,CACEoB,KAAM,aACNF,GAAI,aACJO,MAAO/B,EACP6B,SAAU,SAACI,GACThC,EAAcgC,EAAEF,WAGpB,8CAEDjC,EAAMoC,aACL,4BACE,gBACEhB,UAAWC,EAAAA,EAAAA,QACXgB,IAAKrC,EAAMoC,WACXE,IAAI,aAEN,SAAC,IAAD,CACEZ,GAAG,UACHC,YAAa,UACbC,KAAM,UACNW,KAAM,UACNV,OAAQzB,EAAO0B,WACfC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOY,OAAOP,QACrByB,aAAa,WAInB,gBAAKd,UAAWC,EAAAA,EAAAA,aAAhB,UACE,SAAC,IAAD,CAAQmB,MAAM,SAASD,KAAK,cAE9B,gBAAKnB,UAAWC,EAAAA,EAAAA,aAAhB,SAAqCjB,EAAOqC,iBAyBtD,WAAeC,EAAAA,EAAAA,KALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnBR,WAAYO,EAAME,KAAKT,cAGe,CAAEjB,MAAAA,EAAAA,IAA1C,EAlBc,SAACnB,GACb,OAAIA,EAAM4C,QACD,SAAC,KAAD,CAAUE,GAAI,cAIrB,iBAAK1B,UAAWC,EAAAA,EAAAA,MAAhB,WACE,mCACA,SAACtB,EAAD,CAAWoB,MAAOnB,EAAMmB,MAAOiB,WAAYpC,EAAMoC","sources":["components/Login/Login.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer.js';\r\nimport { Navigate } from 'react-router-dom';\r\nimport style from '../common/FormsControls/formsControl.module.css';\r\nimport { Formik, Form, useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { TriStateCheckbox } from 'primereact/tristatecheckbox';\r\nimport { useState } from 'react';\r\n\r\nconst LoginForm = (props) => {\r\n  const [rememberMe, setRememberMe] = useState();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      rememberMe: rememberMe,\r\n      captcha: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().required('Required field'),\r\n      password: Yup.string()\r\n        .required('Required field')\r\n        .max(20, 'Must be 20 symbols or less')\r\n        .min(4, 'Must be 4 or more symbols'),\r\n    }),\r\n    onSubmit: (values, { setSubmitting, setStatus }) => {\r\n      props.login(\r\n        values.email,\r\n        values.password,\r\n        values.rememberMe && false,\r\n        values.captcha,\r\n        setStatus\r\n      );\r\n      setSubmitting(false);\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Formik\r\n        className={style.loginForm}\r\n        initialValues={formik.initialValues}\r\n        validateOnBlur\r\n        onSubmit={formik.handleSubmit}\r\n        validationSchema={formik.validationSchema}\r\n      >\r\n        <Form>\r\n          <div\r\n            className={\r\n              formik.errors.email && formik.touched.email && style.error\r\n            }\r\n          >\r\n            <span>Email:</span>\r\n            <span className={style.email}>\r\n              <InputText\r\n                id='email'\r\n                placeholder={'email'}\r\n                name={'email'}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                autoComplete='on'\r\n              />\r\n              {formik.errors.email && formik.touched.email && (\r\n                <span>{formik.errors.email}</span>\r\n              )}\r\n            </span>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              formik.errors.password && formik.touched.password && style.error\r\n            }\r\n          >\r\n            <span>Password:</span>\r\n            <Password\r\n              className={style.password}\r\n              id='password'\r\n              placeholder={'password'}\r\n              name={'password'}\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              autoComplete='on'\r\n            />\r\n            {formik.errors.password && formik.touched.password && (\r\n              <span>{formik.errors.password}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <TriStateCheckbox\r\n              name={'rememberMe'}\r\n              id={'rememberMe'}\r\n              value={rememberMe}\r\n              onChange={(e) => {\r\n                setRememberMe(e.value);\r\n              }}\r\n            />\r\n            <span> Remember Me</span>\r\n          </div>\r\n          {props.captchaUrl && (\r\n            <div>\r\n              <img\r\n                className={style.captcha}\r\n                src={props.captchaUrl}\r\n                alt='captcha'\r\n              />\r\n              <InputText\r\n                id='captcha'\r\n                placeholder={'captcha'}\r\n                name={'captcha'}\r\n                type={'captcha'}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.captcha}\r\n                autoComplete='on'\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={style.submitButton}>\r\n            <Button label='Submit' type='submit' />\r\n          </div>\r\n          <div className={style.invalidLogin}>{formik.status}</div>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  if (props.isAuth) {\r\n    return <Navigate to={'/profile'} />;\r\n  }\r\n\r\n  return (\r\n    <div className={style.login}>\r\n      <h1>Login</h1>\r\n      <LoginForm login={props.login} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"names":["LoginForm","props","useState","rememberMe","setRememberMe","formik","useFormik","initialValues","email","password","captcha","validationSchema","Yup","required","max","min","onSubmit","values","setSubmitting","setStatus","login","className","style","validateOnBlur","handleSubmit","errors","touched","id","placeholder","name","onBlur","handleBlur","onChange","handleChange","value","autoComplete","e","captchaUrl","src","alt","type","label","status","connect","state","isAuth","auth","to"],"sourceRoot":""}